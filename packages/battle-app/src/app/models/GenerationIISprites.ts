/* tslint:disable */
/* eslint-disable */
/**
 * @org/source
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Gold } from './Gold';
import {
    GoldFromJSON,
    GoldFromJSONTyped,
    GoldToJSON,
    GoldToJSONTyped,
} from './Gold';
import type { Silver } from './Silver';
import {
    SilverFromJSON,
    SilverFromJSONTyped,
    SilverToJSON,
    SilverToJSONTyped,
} from './Silver';
import type { Crystal } from './Crystal';
import {
    CrystalFromJSON,
    CrystalFromJSONTyped,
    CrystalToJSON,
    CrystalToJSONTyped,
} from './Crystal';

/**
 * Generation-II Sprites
 * @export
 * @interface GenerationIISprites
 */
export interface GenerationIISprites {
    /**
     * 
     * @type {Crystal}
     * @memberof GenerationIISprites
     */
    crystal: Crystal;
    /**
     * 
     * @type {Gold}
     * @memberof GenerationIISprites
     */
    gold: Gold;
    /**
     * 
     * @type {Silver}
     * @memberof GenerationIISprites
     */
    silver: Silver;
}

/**
 * Check if a given object implements the GenerationIISprites interface.
 */
export function instanceOfGenerationIISprites(value: object): value is GenerationIISprites {
    if (!('crystal' in value) || value['crystal'] === undefined) return false;
    if (!('gold' in value) || value['gold'] === undefined) return false;
    if (!('silver' in value) || value['silver'] === undefined) return false;
    return true;
}

export function GenerationIISpritesFromJSON(json: any): GenerationIISprites {
    return GenerationIISpritesFromJSONTyped(json, false);
}

export function GenerationIISpritesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerationIISprites {
    if (json == null) {
        return json;
    }
    return {
        
        'crystal': CrystalFromJSON(json['crystal']),
        'gold': GoldFromJSON(json['gold']),
        'silver': SilverFromJSON(json['silver']),
    };
}

export function GenerationIISpritesToJSON(json: any): GenerationIISprites {
    return GenerationIISpritesToJSONTyped(json, false);
}

export function GenerationIISpritesToJSONTyped(value?: GenerationIISprites | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'crystal': CrystalToJSON(value['crystal']),
        'gold': GoldToJSON(value['gold']),
        'silver': SilverToJSON(value['silver']),
    };
}

