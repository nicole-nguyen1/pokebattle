/* tslint:disable */
/* eslint-disable */
/**
 * @org/source
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PokemonType } from './PokemonType';
import {
    PokemonTypeFromJSON,
    PokemonTypeFromJSONTyped,
    PokemonTypeToJSON,
    PokemonTypeToJSONTyped,
} from './PokemonType';
import type { NamedAPIResource } from './NamedAPIResource';
import {
    NamedAPIResourceFromJSON,
    NamedAPIResourceFromJSONTyped,
    NamedAPIResourceToJSON,
    NamedAPIResourceToJSONTyped,
} from './NamedAPIResource';

/**
 * Data describing a Pokemon's types in a previous generation.
 * @export
 * @interface PokemonPastType
 */
export interface PokemonPastType {
    /**
     * 
     * @type {NamedAPIResource}
     * @memberof PokemonPastType
     */
    generation: NamedAPIResource;
    /**
     * Types this of this Pok√©mon in a previos generation.
     * @type {Array<PokemonType>}
     * @memberof PokemonPastType
     */
    types: Array<PokemonType>;
}

/**
 * Check if a given object implements the PokemonPastType interface.
 */
export function instanceOfPokemonPastType(value: object): value is PokemonPastType {
    if (!('generation' in value) || value['generation'] === undefined) return false;
    if (!('types' in value) || value['types'] === undefined) return false;
    return true;
}

export function PokemonPastTypeFromJSON(json: any): PokemonPastType {
    return PokemonPastTypeFromJSONTyped(json, false);
}

export function PokemonPastTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PokemonPastType {
    if (json == null) {
        return json;
    }
    return {
        
        'generation': NamedAPIResourceFromJSON(json['generation']),
        'types': ((json['types'] as Array<any>).map(PokemonTypeFromJSON)),
    };
}

export function PokemonPastTypeToJSON(json: any): PokemonPastType {
    return PokemonPastTypeToJSONTyped(json, false);
}

export function PokemonPastTypeToJSONTyped(value?: PokemonPastType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'generation': NamedAPIResourceToJSON(value['generation']),
        'types': ((value['types'] as Array<any>).map(PokemonTypeToJSON)),
    };
}

